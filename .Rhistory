xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tons)"))
dev.off()
BaltimoreCityMV <- subset(NEI, fips == "24510" & type=="ON-ROAD")
BaltimoreMVPM25ByYear <- ddply(BaltimoreCityMV, .(year), function(x) sum(x$Emissions))
colnames(BaltimoreMVPM25ByYear)[2] <- "Emissions"
png("plot5.png")
qplot(year, Emissions, data=BaltimoreMVPM25ByYear, geom="line") +
ggtitle(expression("Baltimore City" ~ PM[2.5] ~ "Motor Vehicle Emissions by Year")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tons)"))
dev.off()
MV <- subset(NEI, (fips == "24510" | fips == "06037") & type=="ON-ROAD")
# Use more meaningful variable names
MV <- transform(MV,
region = ifelse(fips == "24510", "Baltimore City", "Los Angeles County"))
MVPM25ByYearAndRegion <- ddply(MV, .(year, region), function(x) sum(x$Emissions))
colnames(MVPM25ByYearAndRegion)[3] <- "Emissions"
# This plot was unsatisfying due to vastly different scales
png("plot6a.png")
qplot(year, Emissions, data=MVPM25ByYearAndRegion, geom="line", color=region) +
#qplot(year, Emissions, data=MVPM25ByYearAndRegion, geom="line", facets=region~.) +
ggtitle(expression("Baltimore City and Los Angeles County" ~ PM[2.5] ~ "Motor Vehicle Emissions by Year")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tons)"))
dev.off()
png("plot6.png")
MV <- subset(NEI, (fips == "24510" | fips == "06037") & type=="ON-ROAD")
# Use more meaningful variable names
MV <- transform(MV,
region = ifelse(fips == "24510", "Baltimore City", "Los Angeles County"))
MVPM25ByYearAndRegion <- ddply(MV, .(year, region), function(x) sum(x$Emissions))
colnames(MVPM25ByYearAndRegion)[3] <- "Emissions"
# This plot was unsatisfying due to vastly different scales
png("plot6.png")
qplot(year, Emissions, data=MVPM25ByYearAndRegion, geom="line", color=region) +
#qplot(year, Emissions, data=MVPM25ByYearAndRegion, geom="line", facets=region~.) +
ggtitle(expression("Baltimore City and Los Angeles County" ~ PM[2.5] ~ "Motor Vehicle Emissions by Year")) +
xlab("Year") +
ylab(expression("Total" ~ PM[2.5] ~ "Emissions (tons)"))
dev.off()
dev.off()
data=mtcars
head(data)
fit<-lm(mpg~wt,mtcars)
fit<-lm(mpg~I(3*wt),mtcars)
fit1<-lm(mpg~wt,mtcars)
fit1
fit
predict(fit1)
resid(fit)
summar(fit)
summary(fit)
ymean<-mean(3*wt)*coef(fit)[2]+coef(fit)[1]
ymean<-mean(3*mtcars$wt)*coef(fit)[2]+coef(fit)[1]
ymean-0.1864*1.96
fit<-lm(mpg~I(2*wt),mtcars)
ymean<-mean(2*wt)*coef(fit)[2]+coef(fit)[1]
ymean<-mean(2*mtcars$wt)*coef(fit)[2]+coef(fit)[1]
ymean-0.1864*1.96
ymean<-mean(mtcars$wt)*coef(fit)[2]+coef(fit)[1]
ymean-0.1864*1.96
fit<-lm(mpg~wt),mtcars)
fit<-lm(mpg~wt,mtcars)
summary(fit)
37.281-5.3445*3
37.281-5.3445*2
myt
head(mtcars)
help()
help(mcars)
help(mtcars)
help(mtcars)=="Format"
a=help(mtcars)
a
a$Format
rm(list=ls())
data(mtcars)
fit<-lm(mpg~.,data=mtcars)
summary(fit)
fit<-lm(mpg~.-1,data=mtcars)
summary(fit)
fit<-lm(mpg~cyl;-1,data=mtcars)
fit<-lm(mpg~cyl-1,data=mtcars)
summary(fit)
fit<-lm(mpg~cyl,data=mtcars)
summary(fit)
suummary(mcars)
summary(mtcars)
str(mtcars)
lm(mpg~factor(am),data=mtcars)
fit<-lm(mpg~factor(am),data=mtcars)
plot(fit)
plot(mpg, am,data=mtcars)
plot(mtcars$mpg, mtcars$am)
plot(mtcars$am,mtcars$mpg)
boxplot(mtcars$am,mtcars$mpg)
boxplot(mtcars$mpg, mtcars$am)
boxplot(mpg ~ am, data = mtcars, xlab = "Transmission (0 = automatic, 1 = manual)")
mean(mtcars$am[mtcars$am==1])
mean(mtcars$am[mtcars$am==0])
summary(mtcars)
summary(fit<-lm(mpg~am,data=mtcars))
summary(fit<-lm(mpg~factor(am),data=mtcars))
summary(fit<-lm(mpg~.,data=mtcars))
fit$sigma
summary(fit<-lm(mpg~.,data=mtcars))$sigma
bestmodel <- step(fit, direction = "both")
summary(bestmodel)
bestmodel[2]
summary(bestmodel[7])
summary(bestmodel)[7]
summary(bestmodel)[9]
summary(bestmodel)[[9]]
a<-summary(bestmodel)
a
step(fit, direction = "both")
summary(fit<-lm(mpg~.,data=mtcars))$sigma
summary(fit<-lm(mpg~.,data=mtcars))
step(fit, direction = "both")analysis <- aov(mpg ~ ., data = mtcars)
summary(analysis)
analysis <- aov(mpg ~ ., data = mtcars)
summary(analysis)
?aov
summary(lm(mpg~cyl,data=mtcars))
analysis <- aov(mpg ~ ., data = mtcars)
summary(analysis)
summary(lm(mpg~cyl-1,data=mtcars))
analysis <- aov(mpg ~ ., data = mtcars)
summary(analysis)
summary(lm(mpg~disp,data=mtcars))
pairs(mtcars)
plot(lm(~factor(am),data=mtcars))
plot(lm(mpg~factor(am),data=mtcars))
plot(mpg~factor(am),data=mtcars)
plot(mpg~factor(am),data=mtcars)
plot(mpg,factor(am),data=mtcars)
plot(mtcars$mpg,mtcars$am)
plot(mtcars$am,mtcars$mpg)
lines(lm(mpg~am,data=mtcars))
lines(lm(mpg~am,data=mtcars),)
abline(lm(mpg~am,data=mtcars))
plot(mtcars$wt,mtcars$mpg)
abline(lm(mpg~wt,data=mtcars))
str(mtcars)
plot(mtcars$cyl,mtcars$mpg)
abline(lm(mpg~cyl,data=mtcars))
pairs(mtcars)
help(mtacrs)
help(mtcars)
lm(mpg~hp,data=mtcars)
data(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs)
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
mtcars$am <- factor(mtcars$am,labels=c('Automatic','Manual'))
str(mtcars)
models<-aov(mpg~.,data=mtcars) ##aov:analysis of variance models
summary(models)
model1<-lm(mpg~cyl+disp+wt+am+hp,data=mtcars)
summary(model1)
model2<-lm(mpg~cyl6+wt+amManual+hp,data=mtcars)
summary(model2)
model2<-lm(mpg~cyl+wt+am+hp,data=mtcars)
summary(model2)
rm(list=ls())
lm(mpg,factor(cyl)+wt)
lm(mpg,factor(cyl)+wt,data=mtcars)
lm(mpg~factor(cyl)+wt,data=mtcars)
lm(mpg~factor(cyl),data=mtcars)
?lm
lm(mpg~factor(cyl):wt,data=mtcars)
summary(lm(mpg~factor(cyl):wt,data=mtcars))
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
lm(y~x)
l<-lm(y~x)
?resid
example(resid)
resid(y,l)
?predict
yhat<-coef(l)[[2]]*x+coef(l)[[1]]
mean(yhat)
hat(x,intercept=True)
hat(x,intercept=true)
hat(x,intercept=TRUE)
?dfbeta
example(dfbeta)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
hat(x,intercept=TRUE)
dfbeta(lm(x~y))
?dfbeta
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y~x)
lm.influence(fit)$hat
dfbetas(fit)
help(mtcars)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars))
rm(list=ls())
library(swirl)
swirl()
library(swirl)
swirl()
swirl()
swirl()
swirl()
swirl()
?installcourse
??installcourse
install_from_swirl
install_from_swirl()
install_from_swirl(Regression Models)
install_from_swirl('Regression Models')
library(swirl)
swirl()
bye()
swirl()
plot(child~parent, galton)
plot(jitter(child,4) ~ parent,galton)
lm(child ~ parent, galton)
regline<-lm(child ~ parent, galton)
regrline<-lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit<-lm(child~parent,galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals,galton$parent)
ols.ic<-fit$ci=oef[1]
ols.ic<-fit$coef[1]
ols.slope$fift$coef[2]
ols.slope=fift$coef[2]
ols.slope=fit$coef[2]
ols.slopefit$coef[2]
ols.slope<-fit$coef[2]
rhs-lhs
lhs-rhs
equal|(lhs,rhs)
equal(lhs,rhs)
all.equal(lhs,rhs)
varChild<-var(galton$child)
varRes<-fit$residuals
varRes<-var(fit$residuals)
varEst<-var(est(ols.slope,ols.ic)
)
all.compare
all.equal(varChild,sum(varRes,varEst))
all.equal(varChild,varRes+varEst)
efit<-lm(accel~mag+dist,attenu)
mean(efit$residuals)
cov(eefit$residuals,attenu$mag)
cov(efit$residuals,attenu$mag)
cov(efit$residuals,attenu$dist)
cor(parent,child,galton)
cor(gpa_nor,gch_nor)
l_nor<-lm(gch_nor~gph_nor)
l_nor<-lm(gch_nor~gpa_nor)
fit<-lm(child~parent,galton)
sqrt((fit$residuals^2/(n-2)))
sqrt((fit$residuals^2/(n-2))
)
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/n-2)
sqrt(deviance(fit)/(n-2))
mu<-mean(galton$child)
sTot<-sum((galton$child-mu)^2)
sRes<-deviance(sTot\)
sRes<-deviance(sTot)
sRes<-deviance(sTot)
deviance?
?
)
?deviance
sRes<-deviance(sTot/n-2)
sRes<-deviance(child$galyon)
sRes<-deviance(child$galton)
info()
deviance(sum(fit$residuals^2))
skip()
sRes/sTot
1-sRes/sTot
summary(fit)$r.squared
cor(galton$child,galton$paren)
cor(galton$child,galton$parent)^2
ones<-rep(1,nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ ones + parent , galton)
lm(child~1.galton)
lm(child~1,galton)
head(treea)
head(treesw)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth",
| trees)
trees2 <- eliminate("Girth",
trees)
head(tress2)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
lm(Fertlity~.,swiss)
lm(Fertility~.,swiss)
all<-lm(Fertility~.,swiss)
summary(all)
summary(lm(Fertility~Agriculture,swiis))
summary(lm(Fertility~Agriculture,swiss))
cor(swiss$Education,swiss$Education)
cor(swiss$Education,swiss$Education)
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec<-swiss$Examination+swiss$Catholic
efit<-lm(Fertility~.+ec,swiss)
coef(fit)-coef(efit)
all$coefficients-efit$coefficients
6
dim(spray)
dim(InsectSprays)
head(InsectSprays,15)
sA
InsectSprays[,2]
sA[,2]
sA[2]
summary(InsectSprays[,2])
sapply(InsectSprays,classes)
sapply(InsectSprays,col.classes)
sapply(InsectSprays,class)
fit<-lm(count~.,InspectSprays)
fit<-lm(count~spray,InspectSprays)
fit<-lm(count~spray,data=InspectSprays)
fit<-lm(count~spray,data=InsectSprays)
fit$coef
(summaryfit)$coef
summary(fit)$coef
est<-summary(fit)$coef[,1]
mean(InsectSprays[,spray=="A"])
mean(InsectSprays[,sprays=="A"])
View(InsectSprays)
mean(InsectSprays[sprays=="A",])
mean(InsectSprays[spray=="A",])
mean(InsectSprays[InsectSprays$spray=="A",])
mean(sA)
mean(sB)
nfit<-lm(count~spray-1,InsectSprays)
summary(nfit)
summary(nfit)$coef
spray2<-relevel(InsectSprays$spray,"C")
fit2<-lm(count~.,InsectSprays)
fit2<-lm(count~spray2,InsectSprays)
summary(fit2)
summary(fit2)$coef
mean(sC)
(fit$coef[3]-fit$coef[2])/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
dim(hunger)
948
names(hunger)
fit<-lm(Numeric~year,hunger)
fit<-lm(Numeric~Year,hunger)
summary(fit)
summary(fit)$coef
lmF<-lm(NUmeric~Year,hungerx[hunger$Sex=="Female"])
lmF<-lm(NUmeric~Year,hunger[hunger$Sex=="Female"])
lmF<-lm(NUmeric~Year,data=hunger[hunger$Sex=="Female"])
lmF<-lm(NUmeric[hunger$Sex=="Female"]~Year,data=hunger)
lmF<-lm(Numeric[hunger$Sex=="Female"]~Year,data=hunger)
?construct
??construct
lmF<-lm(NUmeric[hunger$Sex=="Female"]~Year[hunger$Sex=="Female"],data=hunger)
lmF<-lm(NUmeric[hunger$Sex=="Female"]~Year[hunger$Sex=="Female"],data=hunger)
lmF<-lm(Numeric[hunger$Sex=="Female"]~Year[hunger$Sex=="Female"],data=hunger)
lmF<-lm(Numeric[hunger$Sex=="Female"]~Year[hunger$Sex=="Fmale"],data=hunger)
lmM<-lm(Numeric[hunger$Sex=="Male"]~Year[hunger$Sex=="Male"],data=hunger)
lmBoth<-lm(Numeric~year+sex,hunger)
lmBoth<-lm(Numeric~Year+sex,hunger)
lmBoth<-lm(Numeric~Year+Sex,hunger)
summary(lmBoth)
lmInter()
lmInter<lm(Numeric~Year+Sex+Sex*Year,hunger)
lmInter<-lm(Numeric~Year+Sex+Sex*Year,hunger)
summary(lmInter)
lm(y~x,out2)
fit<-lm(y~x,out2)
plot(fit, which=1)
fitno<-lm(y~x,out[-1])
fitno<-lm(y~x,out2[-1])
fitno<-lm(y~x,out2[-1,])
plot(fitno,which=-1)
plot(fitno,which=1)
fit$coef-fitno$coef
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma<-sqrt(sum(fit$refiduals^2)/(n-2))
sigma<-sqrt(sum(fit$refiduals^2)/df.residual(fit))
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd<-residuals$fit/sigma*sqrt(1-hatvalues(fit))
rstd<-fit$residuals/sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit,
| which=2)
plot(fit,
which=2)
sigma1<-sqrt(deviance(fitno)/df.residuals(fitno))
sigma1<-sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/sigma1*sqrt(1-hatvalues(fit)[1])
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy<-predict(fitno, out2)-predict(fit, out2)
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
rgp1
rgp1()
rgp()
rgp2()
head(swiss)
mdl<-lm(Fertility~.,swiss)
vif(mdl)
mdl2<-lm(Fertility~.-Examiniation,swiss)
mdl2<-lm(Fertility~.-Examination,swiss)
vif(mdl2)
x1c<-simbias()
apply(x1c, 1, mean)
fit1<-lm(Fertility~Agriculture,swiss)
fit3(Fertlity~Agriculture+Examination+Education)
fit3<-lm(Fertlity~Agriculture+Examination+Education)
fit3<-lm(Fertility~Agriculture+Examination+Education)
fit3<-lm(Fertility~Agriculture+Examination+Education,swiss)
anova(fit1,fit3)
deviance(fit3)
d<-deviance(fit3)/43
n<- deviance(fit1)-deviance(fit3)
n <- (deviance(fit1) - deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
view(raveData)
view(ravenData)
(ravenData)
View(ravenData)
mdl<-glm(ravenWinNum~ravescore,family,ravenData)
mdl<-glm(ravenWinNum~ravescore,binomial,ravenData)
mdl<-glm(ravenWinNum~ravenscore,binomial,ravenData)
mdl<-glm(ravenWinNum~ravenScore,binomial,ravenData)
lodds<-predict(mdl, data.frame(ravenScore=c(0, 3, 6))
)
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000, 50))
View(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
confint(mdl, 'date')
exp(confint(mdl, 2))
which.max(hits[,'visits'])
hits[704,]
lambda<- mdl$fitted.values[704]
qpois(.95, lambda)
mdl2<-log(visits+1)
skip()
qpois(.95, mdl2$fitted.values[704])
[1,2,3]+[1,2]
x<-(1,2,3)
x<-[1,2,3]
x<-list()
x<-[1,2,3]
?list
x<-list(1,2,3)
y<-list(1,2)
x+y
y<-list(1,2,3)
x+y
x<-c(1,2,3)
y<-c(1,2,3)
x+y
y<-c(1,2)
x+y
y<- 1
x+y
getwd()
setwd("C:/Users/NM/Google Drive/developing DAtat/Assignment/shiny_app/BMI and BMR calculator")
library(markdown)
rpubsUpload(title, htmlFile, id = NULL, properties = list(), method = getOption("rpubs.upload.method", "internal"))
library(markdown)
rpubsUpload(title='BMI and BMR', htmlFile='indedx.html', id = NULL, properties = list(), method = getOption("rpubs.upload.method", "internal"))
library(markdown)
rpubsUpload(title='BMI and BMR', htmlFile='index.html', id = NULL, properties = list(), method = getOption("rpubs.upload.method", "internal"))
publish(title = 'mytitle', 'index.html', host = 'rpubs')
?publish
??publish
library(slidify)
??publish
publish(title = 'mytitle', 'index.html', host = 'rpubs')
library(markdown)
rpubsUpload(title='BMI and BMR', 'index.html', id = NULL, properties = list(), method = getOption("rpubs.upload.method", "internal"))
